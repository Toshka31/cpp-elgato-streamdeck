// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

#include "api.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace StreamDeckAPI {

inline constexpr Response_Error::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Response_Error::Response_Error(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Response_ErrorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Response_ErrorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Response_ErrorDefaultTypeInternal() {}
  union {
    Response_Error _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Response_ErrorDefaultTypeInternal _Response_Error_default_instance_;

inline constexpr Module::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : components_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Module::Module(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ModuleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleDefaultTypeInternal() {}
  union {
    Module _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleDefaultTypeInternal _Module_default_instance_;

inline constexpr DeviceSetProfileRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        profile_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceSetProfileRequest::DeviceSetProfileRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceSetProfileRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceSetProfileRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceSetProfileRequestDefaultTypeInternal() {}
  union {
    DeviceSetProfileRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceSetProfileRequestDefaultTypeInternal _DeviceSetProfileRequest_default_instance_;

inline constexpr DeviceSetPageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceSetPageRequest::DeviceSetPageRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceSetPageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceSetPageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceSetPageRequestDefaultTypeInternal() {}
  union {
    DeviceSetPageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceSetPageRequestDefaultTypeInternal _DeviceSetPageRequest_default_instance_;

inline constexpr DeviceSetButtonModuleComponentRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        module_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        component_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        button_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceSetButtonModuleComponentRequest::DeviceSetButtonModuleComponentRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceSetButtonModuleComponentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceSetButtonModuleComponentRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceSetButtonModuleComponentRequestDefaultTypeInternal() {}
  union {
    DeviceSetButtonModuleComponentRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceSetButtonModuleComponentRequestDefaultTypeInternal _DeviceSetButtonModuleComponentRequest_default_instance_;

inline constexpr DeviceSetButtonLabelRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        label_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        button_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceSetButtonLabelRequest::DeviceSetButtonLabelRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceSetButtonLabelRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceSetButtonLabelRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceSetButtonLabelRequestDefaultTypeInternal() {}
  union {
    DeviceSetButtonLabelRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceSetButtonLabelRequestDefaultTypeInternal _DeviceSetButtonLabelRequest_default_instance_;

inline constexpr DeviceSetButtonImageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        image_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        button_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceSetButtonImageRequest::DeviceSetButtonImageRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceSetButtonImageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceSetButtonImageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceSetButtonImageRequestDefaultTypeInternal() {}
  union {
    DeviceSetButtonImageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceSetButtonImageRequestDefaultTypeInternal _DeviceSetButtonImageRequest_default_instance_;

inline constexpr DeviceSetBrightnessRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        brightness_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceSetBrightnessRequest::DeviceSetBrightnessRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceSetBrightnessRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceSetBrightnessRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceSetBrightnessRequestDefaultTypeInternal() {}
  union {
    DeviceSetBrightnessRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceSetBrightnessRequestDefaultTypeInternal _DeviceSetBrightnessRequest_default_instance_;

inline constexpr DeviceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceRequest::DeviceRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceRequestDefaultTypeInternal() {}
  union {
    DeviceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceRequestDefaultTypeInternal _DeviceRequest_default_instance_;

inline constexpr DeviceButtonRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        button_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceButtonRequest::DeviceButtonRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceButtonRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceButtonRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceButtonRequestDefaultTypeInternal() {}
  union {
    DeviceButtonRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceButtonRequestDefaultTypeInternal _DeviceButtonRequest_default_instance_;

inline constexpr Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        error_{nullptr},
        code_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Response::Response(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseDefaultTypeInternal() {}
  union {
    Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseDefaultTypeInternal _Response_default_instance_;

inline constexpr ModuleListResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        modules_{},
        response_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleListResponse::ModuleListResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ModuleListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleListResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleListResponseDefaultTypeInternal() {}
  union {
    ModuleListResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleListResponseDefaultTypeInternal _ModuleListResponse_default_instance_;

inline constexpr DeviceProfileListResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        profiles_{},
        response_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceProfileListResponse::DeviceProfileListResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceProfileListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceProfileListResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceProfileListResponseDefaultTypeInternal() {}
  union {
    DeviceProfileListResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceProfileListResponseDefaultTypeInternal _DeviceProfileListResponse_default_instance_;

inline constexpr DevicePageListResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pages_{},
        response_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DevicePageListResponse::DevicePageListResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DevicePageListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DevicePageListResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DevicePageListResponseDefaultTypeInternal() {}
  union {
    DevicePageListResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DevicePageListResponseDefaultTypeInternal _DevicePageListResponse_default_instance_;

inline constexpr DeviceListResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        devices_{},
        response_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceListResponse::DeviceListResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceListResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceListResponseDefaultTypeInternal() {}
  union {
    DeviceListResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceListResponseDefaultTypeInternal _DeviceListResponse_default_instance_;

inline constexpr DeviceCurrentProfileResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        profile_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        response_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceCurrentProfileResponse::DeviceCurrentProfileResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceCurrentProfileResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceCurrentProfileResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceCurrentProfileResponseDefaultTypeInternal() {}
  union {
    DeviceCurrentProfileResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceCurrentProfileResponseDefaultTypeInternal _DeviceCurrentProfileResponse_default_instance_;

inline constexpr DeviceCurrentPageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        page_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        response_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceCurrentPageResponse::DeviceCurrentPageResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceCurrentPageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceCurrentPageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceCurrentPageResponseDefaultTypeInternal() {}
  union {
    DeviceCurrentPageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceCurrentPageResponseDefaultTypeInternal _DeviceCurrentPageResponse_default_instance_;

inline constexpr DeviceButtonLabelResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        label_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        response_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceButtonLabelResponse::DeviceButtonLabelResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceButtonLabelResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceButtonLabelResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceButtonLabelResponseDefaultTypeInternal() {}
  union {
    DeviceButtonLabelResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceButtonLabelResponseDefaultTypeInternal _DeviceButtonLabelResponse_default_instance_;

inline constexpr DeviceButtonImageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        image_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        response_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceButtonImageResponse::DeviceButtonImageResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceButtonImageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceButtonImageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceButtonImageResponseDefaultTypeInternal() {}
  union {
    DeviceButtonImageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceButtonImageResponseDefaultTypeInternal _DeviceButtonImageResponse_default_instance_;

inline constexpr DeviceButtonComponentResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        module_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        component_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        response_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceButtonComponentResponse::DeviceButtonComponentResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceButtonComponentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceButtonComponentResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceButtonComponentResponseDefaultTypeInternal() {}
  union {
    DeviceButtonComponentResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceButtonComponentResponseDefaultTypeInternal _DeviceButtonComponentResponse_default_instance_;

inline constexpr DeviceBrightnessResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        response_{nullptr},
        brightness_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceBrightnessResponse::DeviceBrightnessResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceBrightnessResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceBrightnessResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceBrightnessResponseDefaultTypeInternal() {}
  union {
    DeviceBrightnessResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceBrightnessResponseDefaultTypeInternal _DeviceBrightnessResponse_default_instance_;
}  // namespace StreamDeckAPI
static ::_pb::Metadata file_level_metadata_api_2eproto[21];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_api_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_api_2eproto = nullptr;
const ::uint32_t TableStruct_api_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::ModuleListResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::ModuleListResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::ModuleListResponse, _impl_.response_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::ModuleListResponse, _impl_.modules_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceListResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceListResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceListResponse, _impl_.response_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceListResponse, _impl_.devices_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceRequest, _impl_.device_name_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceProfileListResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceProfileListResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceProfileListResponse, _impl_.response_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceProfileListResponse, _impl_.profiles_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceCurrentProfileResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceCurrentProfileResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceCurrentProfileResponse, _impl_.response_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceCurrentProfileResponse, _impl_.profile_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetProfileRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetProfileRequest, _impl_.device_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetProfileRequest, _impl_.profile_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DevicePageListResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DevicePageListResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DevicePageListResponse, _impl_.response_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DevicePageListResponse, _impl_.pages_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceCurrentPageResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceCurrentPageResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceCurrentPageResponse, _impl_.response_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceCurrentPageResponse, _impl_.page_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetPageRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetPageRequest, _impl_.device_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetPageRequest, _impl_.page_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceBrightnessResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceBrightnessResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceBrightnessResponse, _impl_.response_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceBrightnessResponse, _impl_.brightness_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetBrightnessRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetBrightnessRequest, _impl_.device_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetBrightnessRequest, _impl_.brightness_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceButtonRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceButtonRequest, _impl_.device_name_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceButtonRequest, _impl_.button_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceButtonImageResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceButtonImageResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceButtonImageResponse, _impl_.response_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceButtonImageResponse, _impl_.image_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetButtonImageRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetButtonImageRequest, _impl_.device_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetButtonImageRequest, _impl_.button_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetButtonImageRequest, _impl_.image_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceButtonLabelResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceButtonLabelResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceButtonLabelResponse, _impl_.response_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceButtonLabelResponse, _impl_.label_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetButtonLabelRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetButtonLabelRequest, _impl_.device_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetButtonLabelRequest, _impl_.button_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetButtonLabelRequest, _impl_.label_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceButtonComponentResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceButtonComponentResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceButtonComponentResponse, _impl_.response_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceButtonComponentResponse, _impl_.module_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceButtonComponentResponse, _impl_.component_),
    0,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetButtonModuleComponentRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetButtonModuleComponentRequest, _impl_.device_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetButtonModuleComponentRequest, _impl_.button_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetButtonModuleComponentRequest, _impl_.module_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::DeviceSetButtonModuleComponentRequest, _impl_.component_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::Response_Error, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::Response_Error, _impl_.message_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::Response, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::Response, _impl_.code_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::Response, _impl_.error_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::Module, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::Module, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::StreamDeckAPI::Module, _impl_.components_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::StreamDeckAPI::ModuleListResponse)},
        {12, 22, -1, sizeof(::StreamDeckAPI::DeviceListResponse)},
        {24, -1, -1, sizeof(::StreamDeckAPI::DeviceRequest)},
        {33, 43, -1, sizeof(::StreamDeckAPI::DeviceProfileListResponse)},
        {45, 55, -1, sizeof(::StreamDeckAPI::DeviceCurrentProfileResponse)},
        {57, -1, -1, sizeof(::StreamDeckAPI::DeviceSetProfileRequest)},
        {67, 77, -1, sizeof(::StreamDeckAPI::DevicePageListResponse)},
        {79, 89, -1, sizeof(::StreamDeckAPI::DeviceCurrentPageResponse)},
        {91, -1, -1, sizeof(::StreamDeckAPI::DeviceSetPageRequest)},
        {101, 111, -1, sizeof(::StreamDeckAPI::DeviceBrightnessResponse)},
        {113, -1, -1, sizeof(::StreamDeckAPI::DeviceSetBrightnessRequest)},
        {123, -1, -1, sizeof(::StreamDeckAPI::DeviceButtonRequest)},
        {133, 143, -1, sizeof(::StreamDeckAPI::DeviceButtonImageResponse)},
        {145, -1, -1, sizeof(::StreamDeckAPI::DeviceSetButtonImageRequest)},
        {156, 166, -1, sizeof(::StreamDeckAPI::DeviceButtonLabelResponse)},
        {168, -1, -1, sizeof(::StreamDeckAPI::DeviceSetButtonLabelRequest)},
        {179, 190, -1, sizeof(::StreamDeckAPI::DeviceButtonComponentResponse)},
        {193, -1, -1, sizeof(::StreamDeckAPI::DeviceSetButtonModuleComponentRequest)},
        {205, -1, -1, sizeof(::StreamDeckAPI::Response_Error)},
        {214, 224, -1, sizeof(::StreamDeckAPI::Response)},
        {226, -1, -1, sizeof(::StreamDeckAPI::Module)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::StreamDeckAPI::_ModuleListResponse_default_instance_._instance,
    &::StreamDeckAPI::_DeviceListResponse_default_instance_._instance,
    &::StreamDeckAPI::_DeviceRequest_default_instance_._instance,
    &::StreamDeckAPI::_DeviceProfileListResponse_default_instance_._instance,
    &::StreamDeckAPI::_DeviceCurrentProfileResponse_default_instance_._instance,
    &::StreamDeckAPI::_DeviceSetProfileRequest_default_instance_._instance,
    &::StreamDeckAPI::_DevicePageListResponse_default_instance_._instance,
    &::StreamDeckAPI::_DeviceCurrentPageResponse_default_instance_._instance,
    &::StreamDeckAPI::_DeviceSetPageRequest_default_instance_._instance,
    &::StreamDeckAPI::_DeviceBrightnessResponse_default_instance_._instance,
    &::StreamDeckAPI::_DeviceSetBrightnessRequest_default_instance_._instance,
    &::StreamDeckAPI::_DeviceButtonRequest_default_instance_._instance,
    &::StreamDeckAPI::_DeviceButtonImageResponse_default_instance_._instance,
    &::StreamDeckAPI::_DeviceSetButtonImageRequest_default_instance_._instance,
    &::StreamDeckAPI::_DeviceButtonLabelResponse_default_instance_._instance,
    &::StreamDeckAPI::_DeviceSetButtonLabelRequest_default_instance_._instance,
    &::StreamDeckAPI::_DeviceButtonComponentResponse_default_instance_._instance,
    &::StreamDeckAPI::_DeviceSetButtonModuleComponentRequest_default_instance_._instance,
    &::StreamDeckAPI::_Response_Error_default_instance_._instance,
    &::StreamDeckAPI::_Response_default_instance_._instance,
    &::StreamDeckAPI::_Module_default_instance_._instance,
};
const char descriptor_table_protodef_api_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\tapi.proto\022\rStreamDeckAPI\032\033google/proto"
    "buf/empty.proto\"g\n\022ModuleListResponse\022)\n"
    "\010response\030\001 \001(\0132\027.StreamDeckAPI.Response"
    "\022&\n\007modules\030\002 \003(\0132\025.StreamDeckAPI.Module"
    "\"P\n\022DeviceListResponse\022)\n\010response\030\001 \001(\013"
    "2\027.StreamDeckAPI.Response\022\017\n\007devices\030\002 \003"
    "(\t\"$\n\rDeviceRequest\022\023\n\013device_name\030\001 \001(\t"
    "\"X\n\031DeviceProfileListResponse\022)\n\010respons"
    "e\030\001 \001(\0132\027.StreamDeckAPI.Response\022\020\n\010prof"
    "iles\030\002 \003(\t\"Z\n\034DeviceCurrentProfileRespon"
    "se\022)\n\010response\030\001 \001(\0132\027.StreamDeckAPI.Res"
    "ponse\022\017\n\007profile\030\002 \001(\t\":\n\027DeviceSetProfi"
    "leRequest\022\016\n\006device\030\001 \001(\t\022\017\n\007profile\030\002 \001"
    "(\t\"R\n\026DevicePageListResponse\022)\n\010response"
    "\030\001 \001(\0132\027.StreamDeckAPI.Response\022\r\n\005pages"
    "\030\002 \003(\t\"T\n\031DeviceCurrentPageResponse\022)\n\010r"
    "esponse\030\001 \001(\0132\027.StreamDeckAPI.Response\022\014"
    "\n\004page\030\002 \001(\t\"4\n\024DeviceSetPageRequest\022\016\n\006"
    "device\030\001 \001(\t\022\014\n\004page\030\002 \001(\t\"Y\n\030DeviceBrig"
    "htnessResponse\022)\n\010response\030\001 \001(\0132\027.Strea"
    "mDeckAPI.Response\022\022\n\nbrightness\030\002 \001(\005\"@\n"
    "\032DeviceSetBrightnessRequest\022\016\n\006device\030\001 "
    "\001(\t\022\022\n\nbrightness\030\002 \001(\005\":\n\023DeviceButtonR"
    "equest\022\023\n\013device_name\030\001 \001(\t\022\016\n\006button\030\002 "
    "\001(\005\"U\n\031DeviceButtonImageResponse\022)\n\010resp"
    "onse\030\001 \001(\0132\027.StreamDeckAPI.Response\022\r\n\005i"
    "mage\030\002 \001(\014\"L\n\033DeviceSetButtonImageReques"
    "t\022\016\n\006device\030\001 \001(\t\022\016\n\006button\030\002 \001(\005\022\r\n\005ima"
    "ge\030\003 \001(\014\"U\n\031DeviceButtonLabelResponse\022)\n"
    "\010response\030\001 \001(\0132\027.StreamDeckAPI.Response"
    "\022\r\n\005label\030\002 \001(\t\"L\n\033DeviceSetButtonLabelR"
    "equest\022\016\n\006device\030\001 \001(\t\022\016\n\006button\030\002 \001(\005\022\r"
    "\n\005label\030\003 \001(\t\"m\n\035DeviceButtonComponentRe"
    "sponse\022)\n\010response\030\001 \001(\0132\027.StreamDeckAPI"
    ".Response\022\016\n\006module\030\002 \001(\t\022\021\n\tcomponent\030\003"
    " \001(\t\"j\n%DeviceSetButtonModuleComponentRe"
    "quest\022\016\n\006device\030\001 \001(\t\022\016\n\006button\030\002 \001(\005\022\016\n"
    "\006module\030\003 \001(\t\022\021\n\tcomponent\030\004 \001(\t\"`\n\010Resp"
    "onse\022\014\n\004code\030\001 \001(\005\022,\n\005error\030\002 \001(\0132\035.Stre"
    "amDeckAPI.Response.Error\032\030\n\005Error\022\017\n\007mes"
    "sage\030\001 \001(\t\"*\n\006Module\022\014\n\004name\030\001 \001(\t\022\022\n\nco"
    "mponents\030\002 \003(\t2\364\013\n\rStreamDeckAPI\022J\n\rGetC"
    "omponents\022\026.google.protobuf.Empty\032!.Stre"
    "amDeckAPI.ModuleListResponse\022G\n\nGetDevic"
    "es\022\026.google.protobuf.Empty\032!.StreamDeckA"
    "PI.DeviceListResponse\022Y\n\023SetDeviceBright"
    "ness\022).StreamDeckAPI.DeviceSetBrightness"
    "Request\032\027.StreamDeckAPI.Response\022\\\n\023GetD"
    "eviceBrightness\022\034.StreamDeckAPI.DeviceRe"
    "quest\032\'.StreamDeckAPI.DeviceBrightnessRe"
    "sponse\022[\n\021GetDeviceProfiles\022\034.StreamDeck"
    "API.DeviceRequest\032(.StreamDeckAPI.Device"
    "ProfileListResponse\022d\n\027GetDeviceCurrentP"
    "rofile\022\034.StreamDeckAPI.DeviceRequest\032+.S"
    "treamDeckAPI.DeviceCurrentProfileRespons"
    "e\022Z\n\027SetDeviceCurrentProfile\022&.StreamDec"
    "kAPI.DeviceSetProfileRequest\032\027.StreamDec"
    "kAPI.Response\022U\n\016GetDevicePages\022\034.Stream"
    "DeckAPI.DeviceRequest\032%.StreamDeckAPI.De"
    "vicePageListResponse\022^\n\024GetDeviceCurrent"
    "Page\022\034.StreamDeckAPI.DeviceRequest\032(.Str"
    "eamDeckAPI.DeviceCurrentPageResponse\022T\n\024"
    "SetDeviceCurrentPage\022#.StreamDeckAPI.Dev"
    "iceSetPageRequest\032\027.StreamDeckAPI.Respon"
    "se\022d\n\024GetDeviceButtonImage\022\".StreamDeckA"
    "PI.DeviceButtonRequest\032(.StreamDeckAPI.D"
    "eviceButtonImageResponse\022[\n\024SetDeviceBut"
    "tonImage\022*.StreamDeckAPI.DeviceSetButton"
    "ImageRequest\032\027.StreamDeckAPI.Response\022d\n"
    "\024GetDeviceButtonLabel\022\".StreamDeckAPI.De"
    "viceButtonRequest\032(.StreamDeckAPI.Device"
    "ButtonLabelResponse\022[\n\024SetDeviceButtonLa"
    "bel\022*.StreamDeckAPI.DeviceSetButtonLabel"
    "Request\032\027.StreamDeckAPI.Response\022r\n\036GetD"
    "eviceButtonModuleComponent\022\".StreamDeckA"
    "PI.DeviceButtonRequest\032,.StreamDeckAPI.D"
    "eviceButtonComponentResponse\022o\n\036SetDevic"
    "eButtonModuleComponent\0224.StreamDeckAPI.D"
    "eviceSetButtonModuleComponentRequest\032\027.S"
    "treamDeckAPI.Responseb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_api_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::absl::once_flag descriptor_table_api_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_api_2eproto = {
    false,
    false,
    3189,
    descriptor_table_protodef_api_2eproto,
    "api.proto",
    &descriptor_table_api_2eproto_once,
    descriptor_table_api_2eproto_deps,
    1,
    21,
    schemas,
    file_default_instances,
    TableStruct_api_2eproto::offsets,
    file_level_metadata_api_2eproto,
    file_level_enum_descriptors_api_2eproto,
    file_level_service_descriptors_api_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_api_2eproto_getter() {
  return &descriptor_table_api_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_api_2eproto(&descriptor_table_api_2eproto);
namespace StreamDeckAPI {
// ===================================================================

class ModuleListResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ModuleListResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ModuleListResponse, _impl_._has_bits_);
  static const ::StreamDeckAPI::Response& response(const ModuleListResponse* msg);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::StreamDeckAPI::Response& ModuleListResponse::_Internal::response(const ModuleListResponse* msg) {
  return *msg->_impl_.response_;
}
ModuleListResponse::ModuleListResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.ModuleListResponse)
}
inline PROTOBUF_NDEBUG_INLINE ModuleListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        modules_{visibility, arena, from.modules_} {}

ModuleListResponse::ModuleListResponse(
    ::google::protobuf::Arena* arena,
    const ModuleListResponse& from)
    : ::google::protobuf::Message(arena) {
  ModuleListResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.response_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::StreamDeckAPI::Response>(arena, *from._impl_.response_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.ModuleListResponse)
}
inline PROTOBUF_NDEBUG_INLINE ModuleListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        modules_{visibility, arena} {}

inline void ModuleListResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.response_ = {};
}
ModuleListResponse::~ModuleListResponse() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.ModuleListResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ModuleListResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.response_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ModuleListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.ModuleListResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.modules_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.response_ != nullptr);
    _impl_.response_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ModuleListResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ModuleListResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModuleListResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ModuleListResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .StreamDeckAPI.Module modules = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ModuleListResponse, _impl_.modules_)}},
    // .StreamDeckAPI.Response response = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ModuleListResponse, _impl_.response_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .StreamDeckAPI.Response response = 1;
    {PROTOBUF_FIELD_OFFSET(ModuleListResponse, _impl_.response_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .StreamDeckAPI.Module modules = 2;
    {PROTOBUF_FIELD_OFFSET(ModuleListResponse, _impl_.modules_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::StreamDeckAPI::Response>()},
    {::_pbi::TcParser::GetTable<::StreamDeckAPI::Module>()},
  }}, {{
  }},
};

::uint8_t* ModuleListResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.ModuleListResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .StreamDeckAPI.Response response = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::response(this),
        _Internal::response(this).GetCachedSize(), target, stream);
  }

  // repeated .StreamDeckAPI.Module modules = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_modules_size()); i < n; i++) {
    const auto& repfield = this->_internal_modules().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.ModuleListResponse)
  return target;
}

::size_t ModuleListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.ModuleListResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .StreamDeckAPI.Module modules = 2;
  total_size += 1UL * this->_internal_modules_size();
  for (const auto& msg : this->_internal_modules()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .StreamDeckAPI.Response response = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.response_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ModuleListResponse::_class_data_ = {
    ModuleListResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ModuleListResponse::GetClassData() const {
  return &_class_data_;
}

void ModuleListResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ModuleListResponse*>(&to_msg);
  auto& from = static_cast<const ModuleListResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.ModuleListResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_modules()->MergeFrom(
      from._internal_modules());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_response()->::StreamDeckAPI::Response::MergeFrom(
        from._internal_response());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleListResponse::CopyFrom(const ModuleListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.ModuleListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ModuleListResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ModuleListResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ModuleListResponse::InternalSwap(ModuleListResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.modules_.InternalSwap(&other->_impl_.modules_);
  swap(_impl_.response_, other->_impl_.response_);
}

::google::protobuf::Metadata ModuleListResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[0]);
}
// ===================================================================

class DeviceListResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DeviceListResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DeviceListResponse, _impl_._has_bits_);
  static const ::StreamDeckAPI::Response& response(const DeviceListResponse* msg);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::StreamDeckAPI::Response& DeviceListResponse::_Internal::response(const DeviceListResponse* msg) {
  return *msg->_impl_.response_;
}
DeviceListResponse::DeviceListResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.DeviceListResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        devices_{visibility, arena, from.devices_} {}

DeviceListResponse::DeviceListResponse(
    ::google::protobuf::Arena* arena,
    const DeviceListResponse& from)
    : ::google::protobuf::Message(arena) {
  DeviceListResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.response_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::StreamDeckAPI::Response>(arena, *from._impl_.response_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.DeviceListResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        devices_{visibility, arena} {}

inline void DeviceListResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.response_ = {};
}
DeviceListResponse::~DeviceListResponse() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.DeviceListResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceListResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.response_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.DeviceListResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.devices_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.response_ != nullptr);
    _impl_.response_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceListResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 48, 2> DeviceListResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceListResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeviceListResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string devices = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceListResponse, _impl_.devices_)}},
    // .StreamDeckAPI.Response response = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceListResponse, _impl_.response_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .StreamDeckAPI.Response response = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceListResponse, _impl_.response_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string devices = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceListResponse, _impl_.devices_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::StreamDeckAPI::Response>()},
  }}, {{
    "\40\0\7\0\0\0\0\0"
    "StreamDeckAPI.DeviceListResponse"
    "devices"
  }},
};

::uint8_t* DeviceListResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.DeviceListResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .StreamDeckAPI.Response response = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::response(this),
        _Internal::response(this).GetCachedSize(), target, stream);
  }

  // repeated string devices = 2;
  for (int i = 0, n = this->_internal_devices_size(); i < n; ++i) {
    const auto& s = this->_internal_devices().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DeviceListResponse.devices");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.DeviceListResponse)
  return target;
}

::size_t DeviceListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.DeviceListResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string devices = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_devices().size());
  for (int i = 0, n = _internal_devices().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_devices().Get(i));
  }
  // .StreamDeckAPI.Response response = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.response_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceListResponse::_class_data_ = {
    DeviceListResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceListResponse::GetClassData() const {
  return &_class_data_;
}

void DeviceListResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceListResponse*>(&to_msg);
  auto& from = static_cast<const DeviceListResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.DeviceListResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_devices()->MergeFrom(from._internal_devices());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_response()->::StreamDeckAPI::Response::MergeFrom(
        from._internal_response());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceListResponse::CopyFrom(const DeviceListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.DeviceListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceListResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceListResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceListResponse::InternalSwap(DeviceListResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.devices_.InternalSwap(&other->_impl_.devices_);
  swap(_impl_.response_, other->_impl_.response_);
}

::google::protobuf::Metadata DeviceListResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[1]);
}
// ===================================================================

class DeviceRequest::_Internal {
 public:
};

DeviceRequest::DeviceRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.DeviceRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : device_name_(arena, from.device_name_),
        _cached_size_{0} {}

DeviceRequest::DeviceRequest(
    ::google::protobuf::Arena* arena,
    const DeviceRequest& from)
    : ::google::protobuf::Message(arena) {
  DeviceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.DeviceRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_name_(arena),
        _cached_size_{0} {}

inline void DeviceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeviceRequest::~DeviceRequest() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.DeviceRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.device_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.DeviceRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 47, 2> DeviceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string device_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceRequest, _impl_.device_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_name = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceRequest, _impl_.device_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\13\0\0\0\0\0\0"
    "StreamDeckAPI.DeviceRequest"
    "device_name"
  }},
};

::uint8_t* DeviceRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.DeviceRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_name = 1;
  if (!this->_internal_device_name().empty()) {
    const std::string& _s = this->_internal_device_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DeviceRequest.device_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.DeviceRequest)
  return target;
}

::size_t DeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.DeviceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string device_name = 1;
  if (!this->_internal_device_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_device_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceRequest::_class_data_ = {
    DeviceRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceRequest::GetClassData() const {
  return &_class_data_;
}

void DeviceRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceRequest*>(&to_msg);
  auto& from = static_cast<const DeviceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.DeviceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_device_name().empty()) {
    _this->_internal_set_device_name(from._internal_device_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceRequest::CopyFrom(const DeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.DeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceRequest::InternalSwap(DeviceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_name_, &other->_impl_.device_name_, arena);
}

::google::protobuf::Metadata DeviceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[2]);
}
// ===================================================================

class DeviceProfileListResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DeviceProfileListResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DeviceProfileListResponse, _impl_._has_bits_);
  static const ::StreamDeckAPI::Response& response(const DeviceProfileListResponse* msg);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::StreamDeckAPI::Response& DeviceProfileListResponse::_Internal::response(const DeviceProfileListResponse* msg) {
  return *msg->_impl_.response_;
}
DeviceProfileListResponse::DeviceProfileListResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.DeviceProfileListResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceProfileListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        profiles_{visibility, arena, from.profiles_} {}

DeviceProfileListResponse::DeviceProfileListResponse(
    ::google::protobuf::Arena* arena,
    const DeviceProfileListResponse& from)
    : ::google::protobuf::Message(arena) {
  DeviceProfileListResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.response_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::StreamDeckAPI::Response>(arena, *from._impl_.response_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.DeviceProfileListResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceProfileListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        profiles_{visibility, arena} {}

inline void DeviceProfileListResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.response_ = {};
}
DeviceProfileListResponse::~DeviceProfileListResponse() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.DeviceProfileListResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceProfileListResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.response_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceProfileListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.DeviceProfileListResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.profiles_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.response_ != nullptr);
    _impl_.response_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceProfileListResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 56, 2> DeviceProfileListResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceProfileListResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeviceProfileListResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string profiles = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceProfileListResponse, _impl_.profiles_)}},
    // .StreamDeckAPI.Response response = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceProfileListResponse, _impl_.response_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .StreamDeckAPI.Response response = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceProfileListResponse, _impl_.response_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string profiles = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceProfileListResponse, _impl_.profiles_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::StreamDeckAPI::Response>()},
  }}, {{
    "\47\0\10\0\0\0\0\0"
    "StreamDeckAPI.DeviceProfileListResponse"
    "profiles"
  }},
};

::uint8_t* DeviceProfileListResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.DeviceProfileListResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .StreamDeckAPI.Response response = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::response(this),
        _Internal::response(this).GetCachedSize(), target, stream);
  }

  // repeated string profiles = 2;
  for (int i = 0, n = this->_internal_profiles_size(); i < n; ++i) {
    const auto& s = this->_internal_profiles().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DeviceProfileListResponse.profiles");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.DeviceProfileListResponse)
  return target;
}

::size_t DeviceProfileListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.DeviceProfileListResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string profiles = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_profiles().size());
  for (int i = 0, n = _internal_profiles().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_profiles().Get(i));
  }
  // .StreamDeckAPI.Response response = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.response_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceProfileListResponse::_class_data_ = {
    DeviceProfileListResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceProfileListResponse::GetClassData() const {
  return &_class_data_;
}

void DeviceProfileListResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceProfileListResponse*>(&to_msg);
  auto& from = static_cast<const DeviceProfileListResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.DeviceProfileListResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_profiles()->MergeFrom(from._internal_profiles());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_response()->::StreamDeckAPI::Response::MergeFrom(
        from._internal_response());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceProfileListResponse::CopyFrom(const DeviceProfileListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.DeviceProfileListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceProfileListResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceProfileListResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceProfileListResponse::InternalSwap(DeviceProfileListResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.profiles_.InternalSwap(&other->_impl_.profiles_);
  swap(_impl_.response_, other->_impl_.response_);
}

::google::protobuf::Metadata DeviceProfileListResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[3]);
}
// ===================================================================

class DeviceCurrentProfileResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DeviceCurrentProfileResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DeviceCurrentProfileResponse, _impl_._has_bits_);
  static const ::StreamDeckAPI::Response& response(const DeviceCurrentProfileResponse* msg);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::StreamDeckAPI::Response& DeviceCurrentProfileResponse::_Internal::response(const DeviceCurrentProfileResponse* msg) {
  return *msg->_impl_.response_;
}
DeviceCurrentProfileResponse::DeviceCurrentProfileResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.DeviceCurrentProfileResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceCurrentProfileResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        profile_(arena, from.profile_) {}

DeviceCurrentProfileResponse::DeviceCurrentProfileResponse(
    ::google::protobuf::Arena* arena,
    const DeviceCurrentProfileResponse& from)
    : ::google::protobuf::Message(arena) {
  DeviceCurrentProfileResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.response_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::StreamDeckAPI::Response>(arena, *from._impl_.response_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.DeviceCurrentProfileResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceCurrentProfileResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        profile_(arena) {}

inline void DeviceCurrentProfileResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.response_ = {};
}
DeviceCurrentProfileResponse::~DeviceCurrentProfileResponse() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.DeviceCurrentProfileResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceCurrentProfileResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.profile_.Destroy();
  delete _impl_.response_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceCurrentProfileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.DeviceCurrentProfileResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.profile_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.response_ != nullptr);
    _impl_.response_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceCurrentProfileResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 58, 2> DeviceCurrentProfileResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceCurrentProfileResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeviceCurrentProfileResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string profile = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceCurrentProfileResponse, _impl_.profile_)}},
    // .StreamDeckAPI.Response response = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceCurrentProfileResponse, _impl_.response_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .StreamDeckAPI.Response response = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceCurrentProfileResponse, _impl_.response_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string profile = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceCurrentProfileResponse, _impl_.profile_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::StreamDeckAPI::Response>()},
  }}, {{
    "\52\0\7\0\0\0\0\0"
    "StreamDeckAPI.DeviceCurrentProfileResponse"
    "profile"
  }},
};

::uint8_t* DeviceCurrentProfileResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.DeviceCurrentProfileResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .StreamDeckAPI.Response response = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::response(this),
        _Internal::response(this).GetCachedSize(), target, stream);
  }

  // string profile = 2;
  if (!this->_internal_profile().empty()) {
    const std::string& _s = this->_internal_profile();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DeviceCurrentProfileResponse.profile");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.DeviceCurrentProfileResponse)
  return target;
}

::size_t DeviceCurrentProfileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.DeviceCurrentProfileResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string profile = 2;
  if (!this->_internal_profile().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_profile());
  }

  // .StreamDeckAPI.Response response = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.response_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceCurrentProfileResponse::_class_data_ = {
    DeviceCurrentProfileResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceCurrentProfileResponse::GetClassData() const {
  return &_class_data_;
}

void DeviceCurrentProfileResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceCurrentProfileResponse*>(&to_msg);
  auto& from = static_cast<const DeviceCurrentProfileResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.DeviceCurrentProfileResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_profile().empty()) {
    _this->_internal_set_profile(from._internal_profile());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_response()->::StreamDeckAPI::Response::MergeFrom(
        from._internal_response());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceCurrentProfileResponse::CopyFrom(const DeviceCurrentProfileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.DeviceCurrentProfileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceCurrentProfileResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceCurrentProfileResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceCurrentProfileResponse::InternalSwap(DeviceCurrentProfileResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.profile_, &other->_impl_.profile_, arena);
  swap(_impl_.response_, other->_impl_.response_);
}

::google::protobuf::Metadata DeviceCurrentProfileResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[4]);
}
// ===================================================================

class DeviceSetProfileRequest::_Internal {
 public:
};

DeviceSetProfileRequest::DeviceSetProfileRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.DeviceSetProfileRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceSetProfileRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : device_(arena, from.device_),
        profile_(arena, from.profile_),
        _cached_size_{0} {}

DeviceSetProfileRequest::DeviceSetProfileRequest(
    ::google::protobuf::Arena* arena,
    const DeviceSetProfileRequest& from)
    : ::google::protobuf::Message(arena) {
  DeviceSetProfileRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.DeviceSetProfileRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceSetProfileRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_(arena),
        profile_(arena),
        _cached_size_{0} {}

inline void DeviceSetProfileRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeviceSetProfileRequest::~DeviceSetProfileRequest() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.DeviceSetProfileRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceSetProfileRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.device_.Destroy();
  _impl_.profile_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceSetProfileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.DeviceSetProfileRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_.ClearToEmpty();
  _impl_.profile_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceSetProfileRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2> DeviceSetProfileRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceSetProfileRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string profile = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSetProfileRequest, _impl_.profile_)}},
    // string device = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSetProfileRequest, _impl_.device_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceSetProfileRequest, _impl_.device_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string profile = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceSetProfileRequest, _impl_.profile_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\6\7\0\0\0\0\0"
    "StreamDeckAPI.DeviceSetProfileRequest"
    "device"
    "profile"
  }},
};

::uint8_t* DeviceSetProfileRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.DeviceSetProfileRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device = 1;
  if (!this->_internal_device().empty()) {
    const std::string& _s = this->_internal_device();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DeviceSetProfileRequest.device");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string profile = 2;
  if (!this->_internal_profile().empty()) {
    const std::string& _s = this->_internal_profile();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DeviceSetProfileRequest.profile");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.DeviceSetProfileRequest)
  return target;
}

::size_t DeviceSetProfileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.DeviceSetProfileRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string device = 1;
  if (!this->_internal_device().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_device());
  }

  // string profile = 2;
  if (!this->_internal_profile().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_profile());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceSetProfileRequest::_class_data_ = {
    DeviceSetProfileRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceSetProfileRequest::GetClassData() const {
  return &_class_data_;
}

void DeviceSetProfileRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceSetProfileRequest*>(&to_msg);
  auto& from = static_cast<const DeviceSetProfileRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.DeviceSetProfileRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_device().empty()) {
    _this->_internal_set_device(from._internal_device());
  }
  if (!from._internal_profile().empty()) {
    _this->_internal_set_profile(from._internal_profile());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceSetProfileRequest::CopyFrom(const DeviceSetProfileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.DeviceSetProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceSetProfileRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceSetProfileRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceSetProfileRequest::InternalSwap(DeviceSetProfileRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_, &other->_impl_.device_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.profile_, &other->_impl_.profile_, arena);
}

::google::protobuf::Metadata DeviceSetProfileRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[5]);
}
// ===================================================================

class DevicePageListResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DevicePageListResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DevicePageListResponse, _impl_._has_bits_);
  static const ::StreamDeckAPI::Response& response(const DevicePageListResponse* msg);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::StreamDeckAPI::Response& DevicePageListResponse::_Internal::response(const DevicePageListResponse* msg) {
  return *msg->_impl_.response_;
}
DevicePageListResponse::DevicePageListResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.DevicePageListResponse)
}
inline PROTOBUF_NDEBUG_INLINE DevicePageListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        pages_{visibility, arena, from.pages_} {}

DevicePageListResponse::DevicePageListResponse(
    ::google::protobuf::Arena* arena,
    const DevicePageListResponse& from)
    : ::google::protobuf::Message(arena) {
  DevicePageListResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.response_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::StreamDeckAPI::Response>(arena, *from._impl_.response_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.DevicePageListResponse)
}
inline PROTOBUF_NDEBUG_INLINE DevicePageListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        pages_{visibility, arena} {}

inline void DevicePageListResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.response_ = {};
}
DevicePageListResponse::~DevicePageListResponse() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.DevicePageListResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DevicePageListResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.response_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DevicePageListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.DevicePageListResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pages_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.response_ != nullptr);
    _impl_.response_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DevicePageListResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 50, 2> DevicePageListResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DevicePageListResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DevicePageListResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string pages = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DevicePageListResponse, _impl_.pages_)}},
    // .StreamDeckAPI.Response response = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DevicePageListResponse, _impl_.response_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .StreamDeckAPI.Response response = 1;
    {PROTOBUF_FIELD_OFFSET(DevicePageListResponse, _impl_.response_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string pages = 2;
    {PROTOBUF_FIELD_OFFSET(DevicePageListResponse, _impl_.pages_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::StreamDeckAPI::Response>()},
  }}, {{
    "\44\0\5\0\0\0\0\0"
    "StreamDeckAPI.DevicePageListResponse"
    "pages"
  }},
};

::uint8_t* DevicePageListResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.DevicePageListResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .StreamDeckAPI.Response response = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::response(this),
        _Internal::response(this).GetCachedSize(), target, stream);
  }

  // repeated string pages = 2;
  for (int i = 0, n = this->_internal_pages_size(); i < n; ++i) {
    const auto& s = this->_internal_pages().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DevicePageListResponse.pages");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.DevicePageListResponse)
  return target;
}

::size_t DevicePageListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.DevicePageListResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string pages = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_pages().size());
  for (int i = 0, n = _internal_pages().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_pages().Get(i));
  }
  // .StreamDeckAPI.Response response = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.response_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DevicePageListResponse::_class_data_ = {
    DevicePageListResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DevicePageListResponse::GetClassData() const {
  return &_class_data_;
}

void DevicePageListResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DevicePageListResponse*>(&to_msg);
  auto& from = static_cast<const DevicePageListResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.DevicePageListResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_pages()->MergeFrom(from._internal_pages());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_response()->::StreamDeckAPI::Response::MergeFrom(
        from._internal_response());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DevicePageListResponse::CopyFrom(const DevicePageListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.DevicePageListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DevicePageListResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DevicePageListResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DevicePageListResponse::InternalSwap(DevicePageListResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.pages_.InternalSwap(&other->_impl_.pages_);
  swap(_impl_.response_, other->_impl_.response_);
}

::google::protobuf::Metadata DevicePageListResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[6]);
}
// ===================================================================

class DeviceCurrentPageResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DeviceCurrentPageResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DeviceCurrentPageResponse, _impl_._has_bits_);
  static const ::StreamDeckAPI::Response& response(const DeviceCurrentPageResponse* msg);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::StreamDeckAPI::Response& DeviceCurrentPageResponse::_Internal::response(const DeviceCurrentPageResponse* msg) {
  return *msg->_impl_.response_;
}
DeviceCurrentPageResponse::DeviceCurrentPageResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.DeviceCurrentPageResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceCurrentPageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        page_(arena, from.page_) {}

DeviceCurrentPageResponse::DeviceCurrentPageResponse(
    ::google::protobuf::Arena* arena,
    const DeviceCurrentPageResponse& from)
    : ::google::protobuf::Message(arena) {
  DeviceCurrentPageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.response_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::StreamDeckAPI::Response>(arena, *from._impl_.response_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.DeviceCurrentPageResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceCurrentPageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        page_(arena) {}

inline void DeviceCurrentPageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.response_ = {};
}
DeviceCurrentPageResponse::~DeviceCurrentPageResponse() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.DeviceCurrentPageResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceCurrentPageResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.page_.Destroy();
  delete _impl_.response_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceCurrentPageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.DeviceCurrentPageResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.page_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.response_ != nullptr);
    _impl_.response_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceCurrentPageResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 52, 2> DeviceCurrentPageResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceCurrentPageResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeviceCurrentPageResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string page = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceCurrentPageResponse, _impl_.page_)}},
    // .StreamDeckAPI.Response response = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceCurrentPageResponse, _impl_.response_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .StreamDeckAPI.Response response = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceCurrentPageResponse, _impl_.response_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string page = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceCurrentPageResponse, _impl_.page_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::StreamDeckAPI::Response>()},
  }}, {{
    "\47\0\4\0\0\0\0\0"
    "StreamDeckAPI.DeviceCurrentPageResponse"
    "page"
  }},
};

::uint8_t* DeviceCurrentPageResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.DeviceCurrentPageResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .StreamDeckAPI.Response response = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::response(this),
        _Internal::response(this).GetCachedSize(), target, stream);
  }

  // string page = 2;
  if (!this->_internal_page().empty()) {
    const std::string& _s = this->_internal_page();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DeviceCurrentPageResponse.page");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.DeviceCurrentPageResponse)
  return target;
}

::size_t DeviceCurrentPageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.DeviceCurrentPageResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string page = 2;
  if (!this->_internal_page().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_page());
  }

  // .StreamDeckAPI.Response response = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.response_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceCurrentPageResponse::_class_data_ = {
    DeviceCurrentPageResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceCurrentPageResponse::GetClassData() const {
  return &_class_data_;
}

void DeviceCurrentPageResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceCurrentPageResponse*>(&to_msg);
  auto& from = static_cast<const DeviceCurrentPageResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.DeviceCurrentPageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_page().empty()) {
    _this->_internal_set_page(from._internal_page());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_response()->::StreamDeckAPI::Response::MergeFrom(
        from._internal_response());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceCurrentPageResponse::CopyFrom(const DeviceCurrentPageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.DeviceCurrentPageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceCurrentPageResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceCurrentPageResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceCurrentPageResponse::InternalSwap(DeviceCurrentPageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.page_, &other->_impl_.page_, arena);
  swap(_impl_.response_, other->_impl_.response_);
}

::google::protobuf::Metadata DeviceCurrentPageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[7]);
}
// ===================================================================

class DeviceSetPageRequest::_Internal {
 public:
};

DeviceSetPageRequest::DeviceSetPageRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.DeviceSetPageRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceSetPageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : device_(arena, from.device_),
        page_(arena, from.page_),
        _cached_size_{0} {}

DeviceSetPageRequest::DeviceSetPageRequest(
    ::google::protobuf::Arena* arena,
    const DeviceSetPageRequest& from)
    : ::google::protobuf::Message(arena) {
  DeviceSetPageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.DeviceSetPageRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceSetPageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_(arena),
        page_(arena),
        _cached_size_{0} {}

inline void DeviceSetPageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeviceSetPageRequest::~DeviceSetPageRequest() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.DeviceSetPageRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceSetPageRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.device_.Destroy();
  _impl_.page_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceSetPageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.DeviceSetPageRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_.ClearToEmpty();
  _impl_.page_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceSetPageRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 53, 2> DeviceSetPageRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceSetPageRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string page = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSetPageRequest, _impl_.page_)}},
    // string device = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSetPageRequest, _impl_.device_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceSetPageRequest, _impl_.device_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string page = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceSetPageRequest, _impl_.page_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\6\4\0\0\0\0\0"
    "StreamDeckAPI.DeviceSetPageRequest"
    "device"
    "page"
  }},
};

::uint8_t* DeviceSetPageRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.DeviceSetPageRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device = 1;
  if (!this->_internal_device().empty()) {
    const std::string& _s = this->_internal_device();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DeviceSetPageRequest.device");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string page = 2;
  if (!this->_internal_page().empty()) {
    const std::string& _s = this->_internal_page();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DeviceSetPageRequest.page");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.DeviceSetPageRequest)
  return target;
}

::size_t DeviceSetPageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.DeviceSetPageRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string device = 1;
  if (!this->_internal_device().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_device());
  }

  // string page = 2;
  if (!this->_internal_page().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_page());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceSetPageRequest::_class_data_ = {
    DeviceSetPageRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceSetPageRequest::GetClassData() const {
  return &_class_data_;
}

void DeviceSetPageRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceSetPageRequest*>(&to_msg);
  auto& from = static_cast<const DeviceSetPageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.DeviceSetPageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_device().empty()) {
    _this->_internal_set_device(from._internal_device());
  }
  if (!from._internal_page().empty()) {
    _this->_internal_set_page(from._internal_page());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceSetPageRequest::CopyFrom(const DeviceSetPageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.DeviceSetPageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceSetPageRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceSetPageRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceSetPageRequest::InternalSwap(DeviceSetPageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_, &other->_impl_.device_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.page_, &other->_impl_.page_, arena);
}

::google::protobuf::Metadata DeviceSetPageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[8]);
}
// ===================================================================

class DeviceBrightnessResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DeviceBrightnessResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DeviceBrightnessResponse, _impl_._has_bits_);
  static const ::StreamDeckAPI::Response& response(const DeviceBrightnessResponse* msg);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::StreamDeckAPI::Response& DeviceBrightnessResponse::_Internal::response(const DeviceBrightnessResponse* msg) {
  return *msg->_impl_.response_;
}
DeviceBrightnessResponse::DeviceBrightnessResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.DeviceBrightnessResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceBrightnessResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DeviceBrightnessResponse::DeviceBrightnessResponse(
    ::google::protobuf::Arena* arena,
    const DeviceBrightnessResponse& from)
    : ::google::protobuf::Message(arena) {
  DeviceBrightnessResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.response_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::StreamDeckAPI::Response>(arena, *from._impl_.response_)
                : nullptr;
  _impl_.brightness_ = from._impl_.brightness_;

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.DeviceBrightnessResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceBrightnessResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DeviceBrightnessResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, response_),
           0,
           offsetof(Impl_, brightness_) -
               offsetof(Impl_, response_) +
               sizeof(Impl_::brightness_));
}
DeviceBrightnessResponse::~DeviceBrightnessResponse() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.DeviceBrightnessResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceBrightnessResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.response_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceBrightnessResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.DeviceBrightnessResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.response_ != nullptr);
    _impl_.response_->Clear();
  }
  _impl_.brightness_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceBrightnessResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> DeviceBrightnessResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceBrightnessResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeviceBrightnessResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 brightness = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceBrightnessResponse, _impl_.brightness_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceBrightnessResponse, _impl_.brightness_)}},
    // .StreamDeckAPI.Response response = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceBrightnessResponse, _impl_.response_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .StreamDeckAPI.Response response = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceBrightnessResponse, _impl_.response_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 brightness = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceBrightnessResponse, _impl_.brightness_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::StreamDeckAPI::Response>()},
  }}, {{
  }},
};

::uint8_t* DeviceBrightnessResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.DeviceBrightnessResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .StreamDeckAPI.Response response = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::response(this),
        _Internal::response(this).GetCachedSize(), target, stream);
  }

  // int32 brightness = 2;
  if (this->_internal_brightness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_brightness(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.DeviceBrightnessResponse)
  return target;
}

::size_t DeviceBrightnessResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.DeviceBrightnessResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .StreamDeckAPI.Response response = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.response_);
  }

  // int32 brightness = 2;
  if (this->_internal_brightness() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_brightness());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceBrightnessResponse::_class_data_ = {
    DeviceBrightnessResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceBrightnessResponse::GetClassData() const {
  return &_class_data_;
}

void DeviceBrightnessResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceBrightnessResponse*>(&to_msg);
  auto& from = static_cast<const DeviceBrightnessResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.DeviceBrightnessResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_response()->::StreamDeckAPI::Response::MergeFrom(
        from._internal_response());
  }
  if (from._internal_brightness() != 0) {
    _this->_internal_set_brightness(from._internal_brightness());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceBrightnessResponse::CopyFrom(const DeviceBrightnessResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.DeviceBrightnessResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceBrightnessResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceBrightnessResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceBrightnessResponse::InternalSwap(DeviceBrightnessResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeviceBrightnessResponse, _impl_.brightness_)
      + sizeof(DeviceBrightnessResponse::_impl_.brightness_)
      - PROTOBUF_FIELD_OFFSET(DeviceBrightnessResponse, _impl_.response_)>(
          reinterpret_cast<char*>(&_impl_.response_),
          reinterpret_cast<char*>(&other->_impl_.response_));
}

::google::protobuf::Metadata DeviceBrightnessResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[9]);
}
// ===================================================================

class DeviceSetBrightnessRequest::_Internal {
 public:
};

DeviceSetBrightnessRequest::DeviceSetBrightnessRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.DeviceSetBrightnessRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceSetBrightnessRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : device_(arena, from.device_),
        _cached_size_{0} {}

DeviceSetBrightnessRequest::DeviceSetBrightnessRequest(
    ::google::protobuf::Arena* arena,
    const DeviceSetBrightnessRequest& from)
    : ::google::protobuf::Message(arena) {
  DeviceSetBrightnessRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.brightness_ = from._impl_.brightness_;

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.DeviceSetBrightnessRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceSetBrightnessRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_(arena),
        _cached_size_{0} {}

inline void DeviceSetBrightnessRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.brightness_ = {};
}
DeviceSetBrightnessRequest::~DeviceSetBrightnessRequest() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.DeviceSetBrightnessRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceSetBrightnessRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.device_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceSetBrightnessRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.DeviceSetBrightnessRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_.ClearToEmpty();
  _impl_.brightness_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceSetBrightnessRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 55, 2> DeviceSetBrightnessRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceSetBrightnessRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 brightness = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceSetBrightnessRequest, _impl_.brightness_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSetBrightnessRequest, _impl_.brightness_)}},
    // string device = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSetBrightnessRequest, _impl_.device_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceSetBrightnessRequest, _impl_.device_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 brightness = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceSetBrightnessRequest, _impl_.brightness_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\50\6\0\0\0\0\0\0"
    "StreamDeckAPI.DeviceSetBrightnessRequest"
    "device"
  }},
};

::uint8_t* DeviceSetBrightnessRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.DeviceSetBrightnessRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device = 1;
  if (!this->_internal_device().empty()) {
    const std::string& _s = this->_internal_device();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DeviceSetBrightnessRequest.device");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 brightness = 2;
  if (this->_internal_brightness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_brightness(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.DeviceSetBrightnessRequest)
  return target;
}

::size_t DeviceSetBrightnessRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.DeviceSetBrightnessRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string device = 1;
  if (!this->_internal_device().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_device());
  }

  // int32 brightness = 2;
  if (this->_internal_brightness() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_brightness());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceSetBrightnessRequest::_class_data_ = {
    DeviceSetBrightnessRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceSetBrightnessRequest::GetClassData() const {
  return &_class_data_;
}

void DeviceSetBrightnessRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceSetBrightnessRequest*>(&to_msg);
  auto& from = static_cast<const DeviceSetBrightnessRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.DeviceSetBrightnessRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_device().empty()) {
    _this->_internal_set_device(from._internal_device());
  }
  if (from._internal_brightness() != 0) {
    _this->_internal_set_brightness(from._internal_brightness());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceSetBrightnessRequest::CopyFrom(const DeviceSetBrightnessRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.DeviceSetBrightnessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceSetBrightnessRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceSetBrightnessRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceSetBrightnessRequest::InternalSwap(DeviceSetBrightnessRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_, &other->_impl_.device_, arena);
        swap(_impl_.brightness_, other->_impl_.brightness_);
}

::google::protobuf::Metadata DeviceSetBrightnessRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[10]);
}
// ===================================================================

class DeviceButtonRequest::_Internal {
 public:
};

DeviceButtonRequest::DeviceButtonRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.DeviceButtonRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceButtonRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : device_name_(arena, from.device_name_),
        _cached_size_{0} {}

DeviceButtonRequest::DeviceButtonRequest(
    ::google::protobuf::Arena* arena,
    const DeviceButtonRequest& from)
    : ::google::protobuf::Message(arena) {
  DeviceButtonRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.button_ = from._impl_.button_;

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.DeviceButtonRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceButtonRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_name_(arena),
        _cached_size_{0} {}

inline void DeviceButtonRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.button_ = {};
}
DeviceButtonRequest::~DeviceButtonRequest() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.DeviceButtonRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceButtonRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.device_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceButtonRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.DeviceButtonRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_name_.ClearToEmpty();
  _impl_.button_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceButtonRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 53, 2> DeviceButtonRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceButtonRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 button = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceButtonRequest, _impl_.button_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceButtonRequest, _impl_.button_)}},
    // string device_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceButtonRequest, _impl_.device_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_name = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceButtonRequest, _impl_.device_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 button = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceButtonRequest, _impl_.button_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\41\13\0\0\0\0\0\0"
    "StreamDeckAPI.DeviceButtonRequest"
    "device_name"
  }},
};

::uint8_t* DeviceButtonRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.DeviceButtonRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_name = 1;
  if (!this->_internal_device_name().empty()) {
    const std::string& _s = this->_internal_device_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DeviceButtonRequest.device_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 button = 2;
  if (this->_internal_button() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_button(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.DeviceButtonRequest)
  return target;
}

::size_t DeviceButtonRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.DeviceButtonRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string device_name = 1;
  if (!this->_internal_device_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_device_name());
  }

  // int32 button = 2;
  if (this->_internal_button() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_button());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceButtonRequest::_class_data_ = {
    DeviceButtonRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceButtonRequest::GetClassData() const {
  return &_class_data_;
}

void DeviceButtonRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceButtonRequest*>(&to_msg);
  auto& from = static_cast<const DeviceButtonRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.DeviceButtonRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_device_name().empty()) {
    _this->_internal_set_device_name(from._internal_device_name());
  }
  if (from._internal_button() != 0) {
    _this->_internal_set_button(from._internal_button());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceButtonRequest::CopyFrom(const DeviceButtonRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.DeviceButtonRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceButtonRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceButtonRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceButtonRequest::InternalSwap(DeviceButtonRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_name_, &other->_impl_.device_name_, arena);
        swap(_impl_.button_, other->_impl_.button_);
}

::google::protobuf::Metadata DeviceButtonRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[11]);
}
// ===================================================================

class DeviceButtonImageResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DeviceButtonImageResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DeviceButtonImageResponse, _impl_._has_bits_);
  static const ::StreamDeckAPI::Response& response(const DeviceButtonImageResponse* msg);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::StreamDeckAPI::Response& DeviceButtonImageResponse::_Internal::response(const DeviceButtonImageResponse* msg) {
  return *msg->_impl_.response_;
}
DeviceButtonImageResponse::DeviceButtonImageResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.DeviceButtonImageResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceButtonImageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        image_(arena, from.image_) {}

DeviceButtonImageResponse::DeviceButtonImageResponse(
    ::google::protobuf::Arena* arena,
    const DeviceButtonImageResponse& from)
    : ::google::protobuf::Message(arena) {
  DeviceButtonImageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.response_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::StreamDeckAPI::Response>(arena, *from._impl_.response_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.DeviceButtonImageResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceButtonImageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        image_(arena) {}

inline void DeviceButtonImageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.response_ = {};
}
DeviceButtonImageResponse::~DeviceButtonImageResponse() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.DeviceButtonImageResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceButtonImageResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.image_.Destroy();
  delete _impl_.response_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceButtonImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.DeviceButtonImageResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.image_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.response_ != nullptr);
    _impl_.response_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceButtonImageResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> DeviceButtonImageResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceButtonImageResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeviceButtonImageResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes image = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceButtonImageResponse, _impl_.image_)}},
    // .StreamDeckAPI.Response response = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceButtonImageResponse, _impl_.response_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .StreamDeckAPI.Response response = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceButtonImageResponse, _impl_.response_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes image = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceButtonImageResponse, _impl_.image_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::StreamDeckAPI::Response>()},
  }}, {{
  }},
};

::uint8_t* DeviceButtonImageResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.DeviceButtonImageResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .StreamDeckAPI.Response response = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::response(this),
        _Internal::response(this).GetCachedSize(), target, stream);
  }

  // bytes image = 2;
  if (!this->_internal_image().empty()) {
    const std::string& _s = this->_internal_image();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.DeviceButtonImageResponse)
  return target;
}

::size_t DeviceButtonImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.DeviceButtonImageResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes image = 2;
  if (!this->_internal_image().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_image());
  }

  // .StreamDeckAPI.Response response = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.response_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceButtonImageResponse::_class_data_ = {
    DeviceButtonImageResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceButtonImageResponse::GetClassData() const {
  return &_class_data_;
}

void DeviceButtonImageResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceButtonImageResponse*>(&to_msg);
  auto& from = static_cast<const DeviceButtonImageResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.DeviceButtonImageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_image().empty()) {
    _this->_internal_set_image(from._internal_image());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_response()->::StreamDeckAPI::Response::MergeFrom(
        from._internal_response());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceButtonImageResponse::CopyFrom(const DeviceButtonImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.DeviceButtonImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceButtonImageResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceButtonImageResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceButtonImageResponse::InternalSwap(DeviceButtonImageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.image_, &other->_impl_.image_, arena);
  swap(_impl_.response_, other->_impl_.response_);
}

::google::protobuf::Metadata DeviceButtonImageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[12]);
}
// ===================================================================

class DeviceSetButtonImageRequest::_Internal {
 public:
};

DeviceSetButtonImageRequest::DeviceSetButtonImageRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.DeviceSetButtonImageRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceSetButtonImageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : device_(arena, from.device_),
        image_(arena, from.image_),
        _cached_size_{0} {}

DeviceSetButtonImageRequest::DeviceSetButtonImageRequest(
    ::google::protobuf::Arena* arena,
    const DeviceSetButtonImageRequest& from)
    : ::google::protobuf::Message(arena) {
  DeviceSetButtonImageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.button_ = from._impl_.button_;

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.DeviceSetButtonImageRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceSetButtonImageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_(arena),
        image_(arena),
        _cached_size_{0} {}

inline void DeviceSetButtonImageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.button_ = {};
}
DeviceSetButtonImageRequest::~DeviceSetButtonImageRequest() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.DeviceSetButtonImageRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceSetButtonImageRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.device_.Destroy();
  _impl_.image_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceSetButtonImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.DeviceSetButtonImageRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_.ClearToEmpty();
  _impl_.image_.ClearToEmpty();
  _impl_.button_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceSetButtonImageRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 56, 2> DeviceSetButtonImageRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceSetButtonImageRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string device = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSetButtonImageRequest, _impl_.device_)}},
    // int32 button = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceSetButtonImageRequest, _impl_.button_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSetButtonImageRequest, _impl_.button_)}},
    // bytes image = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSetButtonImageRequest, _impl_.image_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceSetButtonImageRequest, _impl_.device_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 button = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceSetButtonImageRequest, _impl_.button_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bytes image = 3;
    {PROTOBUF_FIELD_OFFSET(DeviceSetButtonImageRequest, _impl_.image_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\6\0\0\0\0\0\0"
    "StreamDeckAPI.DeviceSetButtonImageRequest"
    "device"
  }},
};

::uint8_t* DeviceSetButtonImageRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.DeviceSetButtonImageRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device = 1;
  if (!this->_internal_device().empty()) {
    const std::string& _s = this->_internal_device();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DeviceSetButtonImageRequest.device");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 button = 2;
  if (this->_internal_button() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_button(), target);
  }

  // bytes image = 3;
  if (!this->_internal_image().empty()) {
    const std::string& _s = this->_internal_image();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.DeviceSetButtonImageRequest)
  return target;
}

::size_t DeviceSetButtonImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.DeviceSetButtonImageRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string device = 1;
  if (!this->_internal_device().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_device());
  }

  // bytes image = 3;
  if (!this->_internal_image().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_image());
  }

  // int32 button = 2;
  if (this->_internal_button() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_button());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceSetButtonImageRequest::_class_data_ = {
    DeviceSetButtonImageRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceSetButtonImageRequest::GetClassData() const {
  return &_class_data_;
}

void DeviceSetButtonImageRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceSetButtonImageRequest*>(&to_msg);
  auto& from = static_cast<const DeviceSetButtonImageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.DeviceSetButtonImageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_device().empty()) {
    _this->_internal_set_device(from._internal_device());
  }
  if (!from._internal_image().empty()) {
    _this->_internal_set_image(from._internal_image());
  }
  if (from._internal_button() != 0) {
    _this->_internal_set_button(from._internal_button());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceSetButtonImageRequest::CopyFrom(const DeviceSetButtonImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.DeviceSetButtonImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceSetButtonImageRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceSetButtonImageRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceSetButtonImageRequest::InternalSwap(DeviceSetButtonImageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_, &other->_impl_.device_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.image_, &other->_impl_.image_, arena);
        swap(_impl_.button_, other->_impl_.button_);
}

::google::protobuf::Metadata DeviceSetButtonImageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[13]);
}
// ===================================================================

class DeviceButtonLabelResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DeviceButtonLabelResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DeviceButtonLabelResponse, _impl_._has_bits_);
  static const ::StreamDeckAPI::Response& response(const DeviceButtonLabelResponse* msg);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::StreamDeckAPI::Response& DeviceButtonLabelResponse::_Internal::response(const DeviceButtonLabelResponse* msg) {
  return *msg->_impl_.response_;
}
DeviceButtonLabelResponse::DeviceButtonLabelResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.DeviceButtonLabelResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceButtonLabelResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        label_(arena, from.label_) {}

DeviceButtonLabelResponse::DeviceButtonLabelResponse(
    ::google::protobuf::Arena* arena,
    const DeviceButtonLabelResponse& from)
    : ::google::protobuf::Message(arena) {
  DeviceButtonLabelResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.response_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::StreamDeckAPI::Response>(arena, *from._impl_.response_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.DeviceButtonLabelResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceButtonLabelResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        label_(arena) {}

inline void DeviceButtonLabelResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.response_ = {};
}
DeviceButtonLabelResponse::~DeviceButtonLabelResponse() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.DeviceButtonLabelResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceButtonLabelResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.label_.Destroy();
  delete _impl_.response_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceButtonLabelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.DeviceButtonLabelResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.label_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.response_ != nullptr);
    _impl_.response_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceButtonLabelResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 53, 2> DeviceButtonLabelResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceButtonLabelResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeviceButtonLabelResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string label = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceButtonLabelResponse, _impl_.label_)}},
    // .StreamDeckAPI.Response response = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceButtonLabelResponse, _impl_.response_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .StreamDeckAPI.Response response = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceButtonLabelResponse, _impl_.response_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string label = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceButtonLabelResponse, _impl_.label_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::StreamDeckAPI::Response>()},
  }}, {{
    "\47\0\5\0\0\0\0\0"
    "StreamDeckAPI.DeviceButtonLabelResponse"
    "label"
  }},
};

::uint8_t* DeviceButtonLabelResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.DeviceButtonLabelResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .StreamDeckAPI.Response response = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::response(this),
        _Internal::response(this).GetCachedSize(), target, stream);
  }

  // string label = 2;
  if (!this->_internal_label().empty()) {
    const std::string& _s = this->_internal_label();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DeviceButtonLabelResponse.label");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.DeviceButtonLabelResponse)
  return target;
}

::size_t DeviceButtonLabelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.DeviceButtonLabelResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string label = 2;
  if (!this->_internal_label().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_label());
  }

  // .StreamDeckAPI.Response response = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.response_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceButtonLabelResponse::_class_data_ = {
    DeviceButtonLabelResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceButtonLabelResponse::GetClassData() const {
  return &_class_data_;
}

void DeviceButtonLabelResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceButtonLabelResponse*>(&to_msg);
  auto& from = static_cast<const DeviceButtonLabelResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.DeviceButtonLabelResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_label().empty()) {
    _this->_internal_set_label(from._internal_label());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_response()->::StreamDeckAPI::Response::MergeFrom(
        from._internal_response());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceButtonLabelResponse::CopyFrom(const DeviceButtonLabelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.DeviceButtonLabelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceButtonLabelResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceButtonLabelResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceButtonLabelResponse::InternalSwap(DeviceButtonLabelResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.label_, &other->_impl_.label_, arena);
  swap(_impl_.response_, other->_impl_.response_);
}

::google::protobuf::Metadata DeviceButtonLabelResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[14]);
}
// ===================================================================

class DeviceSetButtonLabelRequest::_Internal {
 public:
};

DeviceSetButtonLabelRequest::DeviceSetButtonLabelRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.DeviceSetButtonLabelRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceSetButtonLabelRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : device_(arena, from.device_),
        label_(arena, from.label_),
        _cached_size_{0} {}

DeviceSetButtonLabelRequest::DeviceSetButtonLabelRequest(
    ::google::protobuf::Arena* arena,
    const DeviceSetButtonLabelRequest& from)
    : ::google::protobuf::Message(arena) {
  DeviceSetButtonLabelRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.button_ = from._impl_.button_;

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.DeviceSetButtonLabelRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceSetButtonLabelRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_(arena),
        label_(arena),
        _cached_size_{0} {}

inline void DeviceSetButtonLabelRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.button_ = {};
}
DeviceSetButtonLabelRequest::~DeviceSetButtonLabelRequest() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.DeviceSetButtonLabelRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceSetButtonLabelRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.device_.Destroy();
  _impl_.label_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceSetButtonLabelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.DeviceSetButtonLabelRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_.ClearToEmpty();
  _impl_.label_.ClearToEmpty();
  _impl_.button_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceSetButtonLabelRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 61, 2> DeviceSetButtonLabelRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceSetButtonLabelRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string device = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSetButtonLabelRequest, _impl_.device_)}},
    // int32 button = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceSetButtonLabelRequest, _impl_.button_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSetButtonLabelRequest, _impl_.button_)}},
    // string label = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSetButtonLabelRequest, _impl_.label_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceSetButtonLabelRequest, _impl_.device_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 button = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceSetButtonLabelRequest, _impl_.button_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string label = 3;
    {PROTOBUF_FIELD_OFFSET(DeviceSetButtonLabelRequest, _impl_.label_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\6\0\5\0\0\0\0"
    "StreamDeckAPI.DeviceSetButtonLabelRequest"
    "device"
    "label"
  }},
};

::uint8_t* DeviceSetButtonLabelRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.DeviceSetButtonLabelRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device = 1;
  if (!this->_internal_device().empty()) {
    const std::string& _s = this->_internal_device();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DeviceSetButtonLabelRequest.device");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 button = 2;
  if (this->_internal_button() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_button(), target);
  }

  // string label = 3;
  if (!this->_internal_label().empty()) {
    const std::string& _s = this->_internal_label();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DeviceSetButtonLabelRequest.label");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.DeviceSetButtonLabelRequest)
  return target;
}

::size_t DeviceSetButtonLabelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.DeviceSetButtonLabelRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string device = 1;
  if (!this->_internal_device().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_device());
  }

  // string label = 3;
  if (!this->_internal_label().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_label());
  }

  // int32 button = 2;
  if (this->_internal_button() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_button());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceSetButtonLabelRequest::_class_data_ = {
    DeviceSetButtonLabelRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceSetButtonLabelRequest::GetClassData() const {
  return &_class_data_;
}

void DeviceSetButtonLabelRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceSetButtonLabelRequest*>(&to_msg);
  auto& from = static_cast<const DeviceSetButtonLabelRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.DeviceSetButtonLabelRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_device().empty()) {
    _this->_internal_set_device(from._internal_device());
  }
  if (!from._internal_label().empty()) {
    _this->_internal_set_label(from._internal_label());
  }
  if (from._internal_button() != 0) {
    _this->_internal_set_button(from._internal_button());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceSetButtonLabelRequest::CopyFrom(const DeviceSetButtonLabelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.DeviceSetButtonLabelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceSetButtonLabelRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceSetButtonLabelRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceSetButtonLabelRequest::InternalSwap(DeviceSetButtonLabelRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_, &other->_impl_.device_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.label_, &other->_impl_.label_, arena);
        swap(_impl_.button_, other->_impl_.button_);
}

::google::protobuf::Metadata DeviceSetButtonLabelRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[15]);
}
// ===================================================================

class DeviceButtonComponentResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DeviceButtonComponentResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DeviceButtonComponentResponse, _impl_._has_bits_);
  static const ::StreamDeckAPI::Response& response(const DeviceButtonComponentResponse* msg);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::StreamDeckAPI::Response& DeviceButtonComponentResponse::_Internal::response(const DeviceButtonComponentResponse* msg) {
  return *msg->_impl_.response_;
}
DeviceButtonComponentResponse::DeviceButtonComponentResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.DeviceButtonComponentResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceButtonComponentResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        module_(arena, from.module_),
        component_(arena, from.component_) {}

DeviceButtonComponentResponse::DeviceButtonComponentResponse(
    ::google::protobuf::Arena* arena,
    const DeviceButtonComponentResponse& from)
    : ::google::protobuf::Message(arena) {
  DeviceButtonComponentResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.response_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::StreamDeckAPI::Response>(arena, *from._impl_.response_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.DeviceButtonComponentResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceButtonComponentResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        module_(arena),
        component_(arena) {}

inline void DeviceButtonComponentResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.response_ = {};
}
DeviceButtonComponentResponse::~DeviceButtonComponentResponse() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.DeviceButtonComponentResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceButtonComponentResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.module_.Destroy();
  _impl_.component_.Destroy();
  delete _impl_.response_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceButtonComponentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.DeviceButtonComponentResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.module_.ClearToEmpty();
  _impl_.component_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.response_ != nullptr);
    _impl_.response_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceButtonComponentResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 67, 2> DeviceButtonComponentResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceButtonComponentResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeviceButtonComponentResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .StreamDeckAPI.Response response = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceButtonComponentResponse, _impl_.response_)}},
    // string module = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceButtonComponentResponse, _impl_.module_)}},
    // string component = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceButtonComponentResponse, _impl_.component_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .StreamDeckAPI.Response response = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceButtonComponentResponse, _impl_.response_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string module = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceButtonComponentResponse, _impl_.module_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string component = 3;
    {PROTOBUF_FIELD_OFFSET(DeviceButtonComponentResponse, _impl_.component_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::StreamDeckAPI::Response>()},
  }}, {{
    "\53\0\6\11\0\0\0\0"
    "StreamDeckAPI.DeviceButtonComponentResponse"
    "module"
    "component"
  }},
};

::uint8_t* DeviceButtonComponentResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.DeviceButtonComponentResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .StreamDeckAPI.Response response = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::response(this),
        _Internal::response(this).GetCachedSize(), target, stream);
  }

  // string module = 2;
  if (!this->_internal_module().empty()) {
    const std::string& _s = this->_internal_module();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DeviceButtonComponentResponse.module");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string component = 3;
  if (!this->_internal_component().empty()) {
    const std::string& _s = this->_internal_component();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DeviceButtonComponentResponse.component");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.DeviceButtonComponentResponse)
  return target;
}

::size_t DeviceButtonComponentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.DeviceButtonComponentResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string module = 2;
  if (!this->_internal_module().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_module());
  }

  // string component = 3;
  if (!this->_internal_component().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_component());
  }

  // .StreamDeckAPI.Response response = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.response_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceButtonComponentResponse::_class_data_ = {
    DeviceButtonComponentResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceButtonComponentResponse::GetClassData() const {
  return &_class_data_;
}

void DeviceButtonComponentResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceButtonComponentResponse*>(&to_msg);
  auto& from = static_cast<const DeviceButtonComponentResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.DeviceButtonComponentResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_module().empty()) {
    _this->_internal_set_module(from._internal_module());
  }
  if (!from._internal_component().empty()) {
    _this->_internal_set_component(from._internal_component());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_response()->::StreamDeckAPI::Response::MergeFrom(
        from._internal_response());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceButtonComponentResponse::CopyFrom(const DeviceButtonComponentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.DeviceButtonComponentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceButtonComponentResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceButtonComponentResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceButtonComponentResponse::InternalSwap(DeviceButtonComponentResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.module_, &other->_impl_.module_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.component_, &other->_impl_.component_, arena);
  swap(_impl_.response_, other->_impl_.response_);
}

::google::protobuf::Metadata DeviceButtonComponentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[16]);
}
// ===================================================================

class DeviceSetButtonModuleComponentRequest::_Internal {
 public:
};

DeviceSetButtonModuleComponentRequest::DeviceSetButtonModuleComponentRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.DeviceSetButtonModuleComponentRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceSetButtonModuleComponentRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : device_(arena, from.device_),
        module_(arena, from.module_),
        component_(arena, from.component_),
        _cached_size_{0} {}

DeviceSetButtonModuleComponentRequest::DeviceSetButtonModuleComponentRequest(
    ::google::protobuf::Arena* arena,
    const DeviceSetButtonModuleComponentRequest& from)
    : ::google::protobuf::Message(arena) {
  DeviceSetButtonModuleComponentRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.button_ = from._impl_.button_;

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.DeviceSetButtonModuleComponentRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceSetButtonModuleComponentRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_(arena),
        module_(arena),
        component_(arena),
        _cached_size_{0} {}

inline void DeviceSetButtonModuleComponentRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.button_ = {};
}
DeviceSetButtonModuleComponentRequest::~DeviceSetButtonModuleComponentRequest() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.DeviceSetButtonModuleComponentRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceSetButtonModuleComponentRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.device_.Destroy();
  _impl_.module_.Destroy();
  _impl_.component_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceSetButtonModuleComponentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.DeviceSetButtonModuleComponentRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_.ClearToEmpty();
  _impl_.module_.ClearToEmpty();
  _impl_.component_.ClearToEmpty();
  _impl_.button_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceSetButtonModuleComponentRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 81, 2> DeviceSetButtonModuleComponentRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceSetButtonModuleComponentRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string component = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSetButtonModuleComponentRequest, _impl_.component_)}},
    // string device = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSetButtonModuleComponentRequest, _impl_.device_)}},
    // int32 button = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceSetButtonModuleComponentRequest, _impl_.button_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSetButtonModuleComponentRequest, _impl_.button_)}},
    // string module = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSetButtonModuleComponentRequest, _impl_.module_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceSetButtonModuleComponentRequest, _impl_.device_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 button = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceSetButtonModuleComponentRequest, _impl_.button_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string module = 3;
    {PROTOBUF_FIELD_OFFSET(DeviceSetButtonModuleComponentRequest, _impl_.module_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string component = 4;
    {PROTOBUF_FIELD_OFFSET(DeviceSetButtonModuleComponentRequest, _impl_.component_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\63\6\0\6\11\0\0\0"
    "StreamDeckAPI.DeviceSetButtonModuleComponentRequest"
    "device"
    "module"
    "component"
  }},
};

::uint8_t* DeviceSetButtonModuleComponentRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.DeviceSetButtonModuleComponentRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device = 1;
  if (!this->_internal_device().empty()) {
    const std::string& _s = this->_internal_device();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DeviceSetButtonModuleComponentRequest.device");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 button = 2;
  if (this->_internal_button() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_button(), target);
  }

  // string module = 3;
  if (!this->_internal_module().empty()) {
    const std::string& _s = this->_internal_module();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DeviceSetButtonModuleComponentRequest.module");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string component = 4;
  if (!this->_internal_component().empty()) {
    const std::string& _s = this->_internal_component();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.DeviceSetButtonModuleComponentRequest.component");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.DeviceSetButtonModuleComponentRequest)
  return target;
}

::size_t DeviceSetButtonModuleComponentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.DeviceSetButtonModuleComponentRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string device = 1;
  if (!this->_internal_device().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_device());
  }

  // string module = 3;
  if (!this->_internal_module().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_module());
  }

  // string component = 4;
  if (!this->_internal_component().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_component());
  }

  // int32 button = 2;
  if (this->_internal_button() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_button());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceSetButtonModuleComponentRequest::_class_data_ = {
    DeviceSetButtonModuleComponentRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceSetButtonModuleComponentRequest::GetClassData() const {
  return &_class_data_;
}

void DeviceSetButtonModuleComponentRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceSetButtonModuleComponentRequest*>(&to_msg);
  auto& from = static_cast<const DeviceSetButtonModuleComponentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.DeviceSetButtonModuleComponentRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_device().empty()) {
    _this->_internal_set_device(from._internal_device());
  }
  if (!from._internal_module().empty()) {
    _this->_internal_set_module(from._internal_module());
  }
  if (!from._internal_component().empty()) {
    _this->_internal_set_component(from._internal_component());
  }
  if (from._internal_button() != 0) {
    _this->_internal_set_button(from._internal_button());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceSetButtonModuleComponentRequest::CopyFrom(const DeviceSetButtonModuleComponentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.DeviceSetButtonModuleComponentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceSetButtonModuleComponentRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceSetButtonModuleComponentRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceSetButtonModuleComponentRequest::InternalSwap(DeviceSetButtonModuleComponentRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_, &other->_impl_.device_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.module_, &other->_impl_.module_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.component_, &other->_impl_.component_, arena);
        swap(_impl_.button_, other->_impl_.button_);
}

::google::protobuf::Metadata DeviceSetButtonModuleComponentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[17]);
}
// ===================================================================

class Response_Error::_Internal {
 public:
};

Response_Error::Response_Error(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.Response.Error)
}
inline PROTOBUF_NDEBUG_INLINE Response_Error::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_(arena, from.message_),
        _cached_size_{0} {}

Response_Error::Response_Error(
    ::google::protobuf::Arena* arena,
    const Response_Error& from)
    : ::google::protobuf::Message(arena) {
  Response_Error* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.Response.Error)
}
inline PROTOBUF_NDEBUG_INLINE Response_Error::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void Response_Error::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Response_Error::~Response_Error() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.Response.Error)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Response_Error::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Response_Error::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.Response.Error)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Response_Error::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 44, 2> Response_Error::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Response_Error_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string message = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Response_Error, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message = 1;
    {PROTOBUF_FIELD_OFFSET(Response_Error, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\7\0\0\0\0\0\0"
    "StreamDeckAPI.Response.Error"
    "message"
  }},
};

::uint8_t* Response_Error::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.Response.Error)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.Response.Error.message");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.Response.Error)
  return target;
}

::size_t Response_Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.Response.Error)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Response_Error::_class_data_ = {
    Response_Error::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Response_Error::GetClassData() const {
  return &_class_data_;
}

void Response_Error::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Response_Error*>(&to_msg);
  auto& from = static_cast<const Response_Error&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.Response.Error)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Response_Error::CopyFrom(const Response_Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.Response.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Response_Error::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Response_Error::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Response_Error::InternalSwap(Response_Error* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
}

::google::protobuf::Metadata Response_Error::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[18]);
}
// ===================================================================

class Response::_Internal {
 public:
  using HasBits = decltype(std::declval<Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Response, _impl_._has_bits_);
  static const ::StreamDeckAPI::Response_Error& error(const Response* msg);
  static void set_has_error(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::StreamDeckAPI::Response_Error& Response::_Internal::error(const Response* msg) {
  return *msg->_impl_.error_;
}
Response::Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.Response)
}
inline PROTOBUF_NDEBUG_INLINE Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Response::Response(
    ::google::protobuf::Arena* arena,
    const Response& from)
    : ::google::protobuf::Message(arena) {
  Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.error_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::StreamDeckAPI::Response_Error>(arena, *from._impl_.error_)
                : nullptr;
  _impl_.code_ = from._impl_.code_;

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.Response)
}
inline PROTOBUF_NDEBUG_INLINE Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, error_),
           0,
           offsetof(Impl_, code_) -
               offsetof(Impl_, error_) +
               sizeof(Impl_::code_));
}
Response::~Response() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.error_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.error_ != nullptr);
    _impl_.error_->Clear();
  }
  _impl_.code_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Response, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .StreamDeckAPI.Response.Error error = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Response, _impl_.error_)}},
    // int32 code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Response, _impl_.code_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Response, _impl_.code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 code = 1;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .StreamDeckAPI.Response.Error error = 2;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.error_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::StreamDeckAPI::Response_Error>()},
  }}, {{
  }},
};

::uint8_t* Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_code(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .StreamDeckAPI.Response.Error error = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::error(this),
        _Internal::error(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.Response)
  return target;
}

::size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .StreamDeckAPI.Response.Error error = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.error_);
  }

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Response::_class_data_ = {
    Response::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Response::GetClassData() const {
  return &_class_data_;
}

void Response::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Response*>(&to_msg);
  auto& from = static_cast<const Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_error()->::StreamDeckAPI::Response_Error::MergeFrom(
        from._internal_error());
  }
  if (from._internal_code() != 0) {
    _this->_internal_set_code(from._internal_code());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Response::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Response::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Response::InternalSwap(Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Response, _impl_.code_)
      + sizeof(Response::_impl_.code_)
      - PROTOBUF_FIELD_OFFSET(Response, _impl_.error_)>(
          reinterpret_cast<char*>(&_impl_.error_),
          reinterpret_cast<char*>(&other->_impl_.error_));
}

::google::protobuf::Metadata Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[19]);
}
// ===================================================================

class Module::_Internal {
 public:
};

Module::Module(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StreamDeckAPI.Module)
}
inline PROTOBUF_NDEBUG_INLINE Module::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : components_{visibility, arena, from.components_},
        name_(arena, from.name_),
        _cached_size_{0} {}

Module::Module(
    ::google::protobuf::Arena* arena,
    const Module& from)
    : ::google::protobuf::Message(arena) {
  Module* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:StreamDeckAPI.Module)
}
inline PROTOBUF_NDEBUG_INLINE Module::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : components_{visibility, arena},
        name_(arena),
        _cached_size_{0} {}

inline void Module::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Module::~Module() {
  // @@protoc_insertion_point(destructor:StreamDeckAPI.Module)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Module::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Module::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamDeckAPI.Module)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.components_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Module::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2> Module::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Module_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string components = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Module, _impl_.components_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Module, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Module, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string components = 2;
    {PROTOBUF_FIELD_OFFSET(Module, _impl_.components_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\24\4\12\0\0\0\0\0"
    "StreamDeckAPI.Module"
    "name"
    "components"
  }},
};

::uint8_t* Module::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamDeckAPI.Module)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.Module.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string components = 2;
  for (int i = 0, n = this->_internal_components_size(); i < n; ++i) {
    const auto& s = this->_internal_components().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StreamDeckAPI.Module.components");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamDeckAPI.Module)
  return target;
}

::size_t Module::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamDeckAPI.Module)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string components = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_components().size());
  for (int i = 0, n = _internal_components().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_components().Get(i));
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Module::_class_data_ = {
    Module::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Module::GetClassData() const {
  return &_class_data_;
}

void Module::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Module*>(&to_msg);
  auto& from = static_cast<const Module&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StreamDeckAPI.Module)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_components()->MergeFrom(from._internal_components());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Module::CopyFrom(const Module& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamDeckAPI.Module)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Module::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Module::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Module::InternalSwap(Module* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.components_.InternalSwap(&other->_impl_.components_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata Module::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_api_2eproto_getter, &descriptor_table_api_2eproto_once,
      file_level_metadata_api_2eproto[20]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace StreamDeckAPI
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
